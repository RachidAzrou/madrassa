Rollen:
- superadmin
- directeur
- docent
- student
- ouder

Elke gebruiker heeft een veld `school_id`. De superadmin heeft géén `school_id` nodig (of null).

---

🏫 Multitenancy:
Alle data moet gefilterd worden op `school_id`, zodat elke school zijn eigen studenten, personeel en ouders heeft. De superadmin kan alles zien.

---

📁 Centrale UI per rol:
Voor elke rol wil ik **centrale view-templates** in de folder `/views/<rol>/` die automatisch gelden voor alle scholen.

Voorbeelden:
- `/views/docent/Dashboard.ejs` → wordt getoond aan elke docent van elke school
- `/views/directeur/Dashboard.ejs` → wordt getoond aan elke directeur van elke school
- etc.

Deze templates moeten ik kunnen aanpassen in Replit om het dashboard van die rol te veranderen, voor alle scholen.

Er zijn **geen per-school UI overrides nodig** in dit project.

---

🧪 Testgebruikers automatisch aanmaken bij opstart:

1. **Superadmin**
   - email: superadmin@example.com
   - password: admin123

2. **School A**:
   - Directeur: directeur.schoola@example.com / pass123
   - Docent: docent.schoola@example.com / pass123
   - Student: student.schoola@example.com / pass123
   - Ouder: ouder.schoola@example.com / pass123

3. **School B**:
   - Directeur: directeur.schoolb@example.com / pass123
   - Docent: docent.schoolb@example.com / pass123
   - Student: student.schoolb@example.com / pass123
   - Ouder: ouder.schoolb@example.com / pass123

---

🔑 Login-systeem:
Gebruikers moeten kunnen inloggen via e-mail en wachtwoord. Na inloggen worden ze doorgestuurd naar het juiste dashboard op basis van hun rol.

---

🛠 Extra wensen:
- Middleware `authorize(allowedRoles)` om routes te beschermen per rol
- Bij elke route en query: filter op `req.user.school_id` zodat gebruikers enkel hun eigen schooldata zien
- Gebruik Express routes gescheiden per rol in `/routes/<rol>.js`
- Gebruik EJS voor de views

---

📦 Database:
Gebruik een eenvoudige JSON-gebaseerde in-memory store (of SQLite indien makkelijk) voor opslag van gebruikers, scholen, studenten, vakken, enz.

---

🎯 Doel:
Ik wil na deze setup makkelijk de pagina’s van elke rol aanpassen in `/views/<rol>/` zodat wijzigingen aan bijvoorbeeld `/views/docent/Dashboard.ejs` automatisch voor **alle** docenten zichtbaar zijn.
